generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model App {
  id              String     @id @default(cuid())
  name            String     @unique
  workspaceSlug   String     @unique
  repositoryUrl   String?
  port            Int?
  status          String     @default("STOPPED")
  healthEndpoint  String?
  startCommand    String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  lastSeenAt      DateTime?
  notes           String?
  openAppBaseUrl  String?
  marketplaceTemplates MarketplaceTemplate[]
  settings        AppSettings?
  containerStates DockerContainerState[]
}

model MarketplaceTemplate {
  id              String   @id @default(cuid())
  name            String   @unique
  summary         String?
  repositoryUrl   String?
  defaultPort     Int?
  preferredGpu    String?
  onboardingHints String?
  sourceAppId     String?    @unique
  sourceApp       App?       @relation(fields: [sourceAppId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model AppSettings {
  id             String   @id @default(cuid())
  appId          String   @unique
  openAppBaseUrl String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  app            App      @relation(fields: [appId], references: [id], onDelete: Cascade)
}

model DockerContainerState {
  id             String   @id @default(cuid())
  appId          String
  containerId    String   @unique
  containerName  String
  status         String
  health         String?
  state          Json?
  metrics        Json?
  lastObservedAt DateTime @default(now())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  app            App      @relation(fields: [appId], references: [id], onDelete: Cascade)

  @@index([appId, updatedAt])
  @@unique([appId])
}
